/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package menu.driven.program.of.data.structures;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;

/**
 *
 * @author Christian Jhames
 */
public class pageSorting extends javax.swing.JFrame {

    /**
     * Creates new form pageArray
     */
    public pageSorting() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        changeArray = new javax.swing.JButton();
        menuArray = new javax.swing.JButton();
        exitArray = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        operationsOnArray = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        bubble = new javax.swing.JButton();
        selection = new javax.swing.JButton();
        merge = new javax.swing.JButton();
        quick = new javax.swing.JButton();
        shell = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        tabTraverse = new javax.swing.JPanel();
        labelOutputTraverse = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaSort = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(135, 206, 250));

        jPanel4.setBackground(new java.awt.Color(135, 206, 250));
        jPanel4.setLayout(new java.awt.GridLayout(3, 1, 5, 15));

        changeArray.setBackground(new java.awt.Color(10, 25, 49));
        changeArray.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        changeArray.setForeground(new java.awt.Color(255, 255, 255));
        changeArray.setIcon(new javax.swing.ImageIcon(getClass().getResource("/change.png"))); // NOI18N
        changeArray.setText("Change");
        changeArray.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        changeArray.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                changeArrayMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                changeArrayMouseExited(evt);
            }
        });
        changeArray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeArrayActionPerformed(evt);
            }
        });
        jPanel4.add(changeArray);

        menuArray.setBackground(new java.awt.Color(10, 25, 49));
        menuArray.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        menuArray.setForeground(new java.awt.Color(255, 255, 255));
        menuArray.setIcon(new javax.swing.ImageIcon(getClass().getResource("/menu.png"))); // NOI18N
        menuArray.setText("Menu");
        menuArray.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        menuArray.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuArrayMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuArrayMouseExited(evt);
            }
        });
        menuArray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuArrayActionPerformed(evt);
            }
        });
        jPanel4.add(menuArray);

        exitArray.setBackground(new java.awt.Color(10, 25, 49));
        exitArray.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        exitArray.setForeground(new java.awt.Color(255, 255, 255));
        exitArray.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exit.png"))); // NOI18N
        exitArray.setText("Exit");
        exitArray.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        exitArray.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitArrayMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitArrayMouseExited(evt);
            }
        });
        exitArray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitArrayActionPerformed(evt);
            }
        });
        jPanel4.add(exitArray);

        jPanel6.setBackground(new java.awt.Color(135, 206, 250));
        jPanel6.setLayout(new java.awt.GridLayout(2, 2, 55, 0));

        jLabel10.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/5700800.png"))); // NOI18N
        jLabel10.setText(" 2023 Christian Jhames De Los Reyes. All rights reserved.");
        jPanel6.add(jLabel10);

        jLabel13.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/size5.png"))); // NOI18N
        jLabel13.setText("Colveta 2, Mambaling, Cebu City, Cebu, 6000, Philippines");
        jPanel6.add(jLabel13);

        jLabel12.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/size2.png"))); // NOI18N
        jLabel12.setText(" christianjhamesdelosreyes@gmail.com");
        jPanel6.add(jLabel12);

        jLabel14.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/size3.png"))); // NOI18N
        jLabel14.setText(" 0915-044-0670");
        jPanel6.add(jLabel14);

        jLabel9.setFont(new java.awt.Font("Verdana", 2, 14)); // NOI18N
        jLabel9.setText("These are just some examples of sorting algorithm types. Each type has its own advantages, ");

        jLabel11.setFont(new java.awt.Font("Verdana", 2, 14)); // NOI18N
        jLabel11.setText("disadvantages, and best-case scenarios for efficient sorting. The choice of sorting algorithm ");

        jLabel15.setFont(new java.awt.Font("Verdana", 2, 14)); // NOI18N
        jLabel15.setText("depends on the specific requirements and characteristics of the data being sorted.");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)
                        .addGap(52, 52, 52)))
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(28, 28, 28))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-7, 463, 930, 230));

        jPanel3.setBackground(new java.awt.Color(10, 25, 49));

        operationsOnArray.setBackground(new java.awt.Color(255, 255, 255));
        operationsOnArray.setFont(new java.awt.Font("Nirmala UI", 1, 30)); // NOI18N
        operationsOnArray.setForeground(new java.awt.Color(255, 255, 255));
        operationsOnArray.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        operationsOnArray.setText("Types of Sorting");

        jPanel5.setBackground(new java.awt.Color(10, 25, 49));
        jPanel5.setLayout(new java.awt.GridLayout(5, 1, 5, 35));

        bubble.setBackground(new java.awt.Color(102, 204, 255));
        bubble.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        bubble.setText("Bubble Sort");
        bubble.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bubble.setPreferredSize(new java.awt.Dimension(87, 12));
        bubble.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bubbleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bubbleMouseExited(evt);
            }
        });
        bubble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bubbleActionPerformed(evt);
            }
        });
        jPanel5.add(bubble);

        selection.setBackground(new java.awt.Color(102, 204, 255));
        selection.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        selection.setText("Selection Sort");
        selection.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        selection.setPreferredSize(new java.awt.Dimension(87, 12));
        selection.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                selectionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                selectionMouseExited(evt);
            }
        });
        selection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectionActionPerformed(evt);
            }
        });
        jPanel5.add(selection);

        merge.setBackground(new java.awt.Color(102, 204, 255));
        merge.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        merge.setText("Merge Sort");
        merge.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        merge.setPreferredSize(new java.awt.Dimension(87, 12));
        merge.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mergeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mergeMouseExited(evt);
            }
        });
        merge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mergeActionPerformed(evt);
            }
        });
        jPanel5.add(merge);

        quick.setBackground(new java.awt.Color(102, 204, 255));
        quick.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        quick.setText("Quick Sort");
        quick.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        quick.setPreferredSize(new java.awt.Dimension(87, 12));
        quick.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                quickMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                quickMouseExited(evt);
            }
        });
        quick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quickActionPerformed(evt);
            }
        });
        jPanel5.add(quick);

        shell.setBackground(new java.awt.Color(102, 204, 255));
        shell.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        shell.setText("Shell Sort");
        shell.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        shell.setPreferredSize(new java.awt.Dimension(87, 12));
        shell.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                shellMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                shellMouseExited(evt);
            }
        });
        shell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shellActionPerformed(evt);
            }
        });
        jPanel5.add(shell);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ezgif.com-resize (8).gif"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel2)
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(operationsOnArray)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(113, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(operationsOnArray)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap(25, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)))
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-6, -3, 490, 460));

        jTabbedPane1.setBackground(new java.awt.Color(10, 25, 49));

        tabTraverse.setBackground(new java.awt.Color(10, 25, 49));

        labelOutputTraverse.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelOutputTraverse.setForeground(new java.awt.Color(255, 255, 255));
        labelOutputTraverse.setText("Output:");

        textAreaSort.setEditable(false);
        textAreaSort.setColumns(20);
        textAreaSort.setRows(5);
        jScrollPane1.setViewportView(textAreaSort);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ezgif.com-resize (23).gif"))); // NOI18N

        javax.swing.GroupLayout tabTraverseLayout = new javax.swing.GroupLayout(tabTraverse);
        tabTraverse.setLayout(tabTraverseLayout);
        tabTraverseLayout.setHorizontalGroup(
            tabTraverseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabTraverseLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(tabTraverseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(tabTraverseLayout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelOutputTraverse))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        tabTraverseLayout.setVerticalGroup(
            tabTraverseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabTraverseLayout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(labelOutputTraverse)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jTabbedPane1.addTab("tab1", tabTraverse);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, -33, 430, 490));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 915, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void shellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shellActionPerformed
    textAreaSort.setText("");
    jTabbedPane1.setSelectedIndex(0);

    DataStore dataStore = DataStore.getInstance();
    int[] data = dataStore.getData();

    shellSort(data);

    StringBuilder sortedData = new StringBuilder();
    for (int element : data) {
        sortedData.append(element).append(" ");
    }

    textAreaSort.append(sortedData.toString());

    javax.swing.JOptionPane.showMessageDialog(pageSorting.this, "Shell Sort Complete!");
    }//GEN-LAST:event_shellActionPerformed

private void shellSort(int[] data) {
    int n = data.length;
    int gap = n / 2;

    while (gap > 0) {
        for (int i = gap; i < n; i++) {
            int temp = data[i];
            int j = i;

            while (j >= gap && data[j - gap] > temp) {
                data[j] = data[j - gap];
                j -= gap;
            }

            data[j] = temp;
        }

        gap /= 2;
    }
}
    
       
    private void selectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectionActionPerformed
    textAreaSort.setText("");
    jTabbedPane1.setSelectedIndex(0);

    DataStore dataStore = DataStore.getInstance();
    int[] data = dataStore.getData();

    selectionSort(data);

    StringBuilder sortedData = new StringBuilder();
    for (int element : data) {
        sortedData.append(element).append(" ");
    }

    textAreaSort.append(sortedData.toString());

    javax.swing.JOptionPane.showMessageDialog(pageSorting.this, "Selection Sort Complete!");
    }//GEN-LAST:event_selectionActionPerformed

private void selectionSort(int[] data) {
    int n = data.length;

    for (int i = 0; i < n - 1; i++) {
        int minIndex = i;

        for (int j = i + 1; j < n; j++) {
            if (data[j] < data[minIndex]) {
                minIndex = j;
            }
        }

        // Swap elements
        int temp = data[minIndex];
        data[minIndex] = data[i];
        data[i] = temp;
    }
}

    private void mergeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mergeActionPerformed
    textAreaSort.setText("");
    jTabbedPane1.setSelectedIndex(0);

    DataStore dataStore = DataStore.getInstance();
    int[] data = dataStore.getData();

    mergeSort(data, 0, data.length - 1);

    StringBuilder sortedData = new StringBuilder();
    for (int element : data) {
        sortedData.append(element).append(" ");
    }

    textAreaSort.append(sortedData.toString());

    javax.swing.JOptionPane.showMessageDialog(pageSorting.this, "Merge Sort Complete!");
    }//GEN-LAST:event_mergeActionPerformed

private void mergeSort(int[] data, int left, int right) {
    if (left < right) {
        int mid = (left + right) / 2;

        mergeSort(data, left, mid);
        mergeSort(data, mid + 1, right);

        merge(data, left, mid, right);
    }
}

private void merge(int[] data, int left, int mid, int right) {
    int n1 = mid - left + 1;
    int n2 = right - mid;

    int[] leftArray = new int[n1];
    int[] rightArray = new int[n2];

    for (int i = 0; i < n1; ++i) {
        leftArray[i] = data[left + i];
    }
    for (int j = 0; j < n2; ++j) {
        rightArray[j] = data[mid + 1 + j];
    }

    int i = 0, j = 0;
    int k = left;

    while (i < n1 && j < n2) {
        if (leftArray[i] <= rightArray[j]) {
            data[k] = leftArray[i];
            i++;
        } else {
            data[k] = rightArray[j];
            j++;
        }
        k++;
    }

    while (i < n1) {
        data[k] = leftArray[i];
        i++;
        k++;
    }

    while (j < n2) {
        data[k] = rightArray[j];
        j++;
        k++;
    }
}   
    
    private void quickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quickActionPerformed
    textAreaSort.setText("");
    jTabbedPane1.setSelectedIndex(0);

    DataStore dataStore = DataStore.getInstance();
    int[] data = dataStore.getData();

    quickSort(data, 0, data.length - 1);

    StringBuilder sortedData = new StringBuilder();
    for (int element : data) {
        sortedData.append(element).append(" ");
    }

    textAreaSort.append(sortedData.toString());

    javax.swing.JOptionPane.showMessageDialog(pageSorting.this, "Quick Sort Complete!");
    }//GEN-LAST:event_quickActionPerformed

 private void quickSort(int[] data, int low, int high) {
    if (low < high) {
        int pivotIndex = partition(data, low, high);

        quickSort(data, low, pivotIndex - 1);
        quickSort(data, pivotIndex + 1, high);
    }
}

private int partition(int[] data, int low, int high) {
    int pivot = data[high];
    int i = low - 1;

    for (int j = low; j < high; j++) {
        if (data[j] < pivot) {
            i++;
            swap(data, i, j);
        }
    }

    swap(data, i + 1, high);

    return i + 1;
}

private void swap(int[] data, int i, int j) {
    int temp = data[i];
    data[i] = data[j];
    data[j] = temp;
}   
    
    private void bubbleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bubbleActionPerformed
    textAreaSort.setText("");
    jTabbedPane1.setSelectedIndex(0);

    DataStore dataStore = DataStore.getInstance();
    int[] data = dataStore.getData();

    bubbleSort(data);

    StringBuilder sortedData = new StringBuilder();
    for (int element : data) {
        sortedData.append(element).append(" ");
    }

    textAreaSort.append(sortedData.toString());

    javax.swing.JOptionPane.showMessageDialog(pageSorting.this, "Bubble Sort Complete!");

    }//GEN-LAST:event_bubbleActionPerformed

  private void bubbleSort(int[] data) {
    int n = data.length;
    boolean swapped;

    for (int i = 0; i < n - 1; i++) {
        swapped = false;

        for (int j = 0; j < n - i - 1; j++) {
            if (data[j] > data[j + 1]) {
                // Swap elements
                int temp = data[j];
                data[j] = data[j + 1];
                data[j + 1] = temp;
                swapped = true;
            }
        }

        // If no two elements were swapped in the inner loop, the array is already sorted
        if (!swapped) {
            break;
        }
    }
}  
    
    private void menuArrayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuArrayActionPerformed
        close();
        page3_algo pg3 = new page3_algo();
        pg3.setVisible(true);       // TODO add your handling code here  // TODO add your handling code here:
    }//GEN-LAST:event_menuArrayActionPerformed

    private void changeArrayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeArrayActionPerformed
        close();
        page2 pg2 = new page2();
        pg2.setVisible(true);
    }//GEN-LAST:event_changeArrayActionPerformed

    private void exitArrayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitArrayActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitArrayActionPerformed

    private void changeArrayMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeArrayMouseEntered
    changeArray.setForeground(new Color(0, 0, 0));
    changeArray.setBackground(new Color(10,82,96));
    }//GEN-LAST:event_changeArrayMouseEntered

    private void changeArrayMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeArrayMouseExited
    changeArray.setForeground(new Color(255, 255, 255));
    changeArray.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_changeArrayMouseExited

    private void menuArrayMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuArrayMouseEntered
    menuArray.setForeground(new Color(0, 0, 0));
    menuArray.setBackground(new Color(10,82,96));
    }//GEN-LAST:event_menuArrayMouseEntered

    private void menuArrayMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuArrayMouseExited
    menuArray.setForeground(new Color(255, 255, 255));
    menuArray.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_menuArrayMouseExited

    private void exitArrayMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitArrayMouseEntered
    exitArray.setForeground(new Color(0, 0, 0));
    exitArray.setBackground(new Color(10,82,96));
    }//GEN-LAST:event_exitArrayMouseEntered

    private void exitArrayMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitArrayMouseExited
    exitArray.setForeground(new Color(255, 255, 255));
    exitArray.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_exitArrayMouseExited

    private void bubbleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bubbleMouseEntered
    bubble.setForeground(new Color(255, 255, 255));
    bubble.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_bubbleMouseEntered

    private void bubbleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bubbleMouseExited
    bubble.setForeground(new Color(0, 0, 0));
    bubble.setBackground(new Color(102,204,255));
    }//GEN-LAST:event_bubbleMouseExited

    private void selectionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectionMouseEntered
    selection.setForeground(new Color(255, 255, 255));
    selection.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_selectionMouseEntered

    private void selectionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectionMouseExited
    selection.setForeground(new Color(0, 0, 0));
    selection.setBackground(new Color(102,204,255));
    }//GEN-LAST:event_selectionMouseExited

    private void mergeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mergeMouseEntered
    merge.setForeground(new Color(255, 255, 255));
    merge.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_mergeMouseEntered

    private void mergeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mergeMouseExited
    merge.setForeground(new Color(0, 0, 0));
    merge.setBackground(new Color(102,204,255));
    }//GEN-LAST:event_mergeMouseExited

    private void quickMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quickMouseEntered
    quick.setForeground(new Color(255, 255, 255));
    quick.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_quickMouseEntered

    private void quickMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quickMouseExited
    quick.setForeground(new Color(0, 0, 0));
    quick.setBackground(new Color(102,204,255));
    }//GEN-LAST:event_quickMouseExited

    private void shellMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shellMouseEntered
    shell.setForeground(new Color(255, 255, 255));
    shell.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_shellMouseEntered

    private void shellMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shellMouseExited
    shell.setForeground(new Color(0, 0, 0));
    shell.setBackground(new Color(102,204,255));
    }//GEN-LAST:event_shellMouseExited

 
    public void close(){
       WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
       Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pageSorting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pageSorting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pageSorting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pageSorting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pageSorting().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bubble;
    private javax.swing.JButton changeArray;
    private javax.swing.JButton exitArray;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelOutputTraverse;
    private javax.swing.JButton menuArray;
    private javax.swing.JButton merge;
    private javax.swing.JLabel operationsOnArray;
    private javax.swing.JButton quick;
    private javax.swing.JButton selection;
    private javax.swing.JButton shell;
    private javax.swing.JPanel tabTraverse;
    private javax.swing.JTextArea textAreaSort;
    // End of variables declaration//GEN-END:variables
}
