/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package menu.driven.program.of.data.structures;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;

/**
 *
 * @author Christian Jhames
 */
public class pageTree extends javax.swing.JFrame {

    
    BST bst;

    class BSTNode {
        BSTNode left, right;
        int data;

        public BSTNode(int n) {
            left = null;
            right = null;
            data = n;
        }
    }

    public class BST {
        BSTNode root;

        public BST() {
            root = null;
        }

        public void insert(int data) {
            root = insert(root, data);
            DataStore.getInstance().addData(data);
        }

        private BSTNode insert(BSTNode node, int data) {
            if (node == null)
                node = new BSTNode(data);
            else {
                if (data <= node.data)
                    node.left = insert(node.left, data);
                else
                    node.right = insert(node.right, data);
            }
            return node;
        }

        public void preOrderTraversal(BSTNode node, StringBuilder result) {
            if (node == null)
                return;

            result.append(node.data).append(" ");
            preOrderTraversal(node.left, result);
            preOrderTraversal(node.right, result);
        }

        public void inOrderTraversal(BSTNode node, StringBuilder result) {
            if (node == null)
                return;

            inOrderTraversal(node.left, result);
            result.append(node.data).append(" ");
            inOrderTraversal(node.right, result);
        }

        public void postOrderTraversal(BSTNode node, StringBuilder result) {
            if (node == null)
                return;

            postOrderTraversal(node.left, result);
            postOrderTraversal(node.right, result);
            result.append(node.data).append(" ");
        }

        public boolean search(BSTNode node, int data) {
            if (node == null)
                return false;
            if (node.data == data)
                return true;
            if (data < node.data)
                return search(node.left, data);
            else
                return search(node.right, data);
        }
    }


        public pageTree() {
            initComponents();
            bst = new BST();
            DataStore dataStore = DataStore.getInstance();
            int[] data = dataStore.getData();
            for (int i = 0; i < data.length; i++) {
                bst.insert(data[i]);
            }
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        changeTree = new javax.swing.JButton();
        menuTree = new javax.swing.JButton();
        exitTree = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        operationsOnTree = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        traversePre = new javax.swing.JButton();
        traverseIn = new javax.swing.JButton();
        traversePost = new javax.swing.JButton();
        insert = new javax.swing.JButton();
        search = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        tabTraverse = new javax.swing.JPanel();
        labelOutputTraverse = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaTreeTraverse = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        tabSearch = new javax.swing.JPanel();
        enterButtonTreeSearch = new javax.swing.JButton();
        labelDataTreeSearch = new javax.swing.JLabel();
        spinnerDataTreeSearch = new javax.swing.JSpinner();
        tabInsert = new javax.swing.JPanel();
        labelDataTreeInsert = new javax.swing.JLabel();
        spinnerDataTreeInsert = new javax.swing.JSpinner();
        enterButtonTreeInsert = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(135, 206, 250));

        jPanel4.setBackground(new java.awt.Color(135, 206, 250));
        jPanel4.setLayout(new java.awt.GridLayout(3, 1, 5, 15));

        changeTree.setBackground(new java.awt.Color(10, 25, 49));
        changeTree.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        changeTree.setForeground(new java.awt.Color(255, 255, 255));
        changeTree.setIcon(new javax.swing.ImageIcon(getClass().getResource("/change.png"))); // NOI18N
        changeTree.setText("Change");
        changeTree.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        changeTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                changeTreeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                changeTreeMouseExited(evt);
            }
        });
        changeTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeTreeActionPerformed(evt);
            }
        });
        jPanel4.add(changeTree);

        menuTree.setBackground(new java.awt.Color(10, 25, 49));
        menuTree.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        menuTree.setForeground(new java.awt.Color(255, 255, 255));
        menuTree.setIcon(new javax.swing.ImageIcon(getClass().getResource("/menu.png"))); // NOI18N
        menuTree.setText("Menu");
        menuTree.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        menuTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuTreeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuTreeMouseExited(evt);
            }
        });
        menuTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuTreeActionPerformed(evt);
            }
        });
        jPanel4.add(menuTree);

        exitTree.setBackground(new java.awt.Color(10, 25, 49));
        exitTree.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        exitTree.setForeground(new java.awt.Color(255, 255, 255));
        exitTree.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exit.png"))); // NOI18N
        exitTree.setText("Exit");
        exitTree.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        exitTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitTreeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitTreeMouseExited(evt);
            }
        });
        exitTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitTreeActionPerformed(evt);
            }
        });
        jPanel4.add(exitTree);

        jPanel6.setBackground(new java.awt.Color(135, 206, 250));
        jPanel6.setLayout(new java.awt.GridLayout(2, 2, 55, 0));

        jLabel10.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/5700800.png"))); // NOI18N
        jLabel10.setText(" 2023 Christian Jhames De Los Reyes. All rights reserved.");
        jPanel6.add(jLabel10);

        jLabel13.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/size5.png"))); // NOI18N
        jLabel13.setText("Colveta 2, Mambaling, Cebu City, Cebu, 6000, Philippines");
        jPanel6.add(jLabel13);

        jLabel12.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/size2.png"))); // NOI18N
        jLabel12.setText(" christianjhamesdelosreyes@gmail.com");
        jPanel6.add(jLabel12);

        jLabel14.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/size3.png"))); // NOI18N
        jLabel14.setText(" 0915-044-0670");
        jPanel6.add(jLabel14);

        jLabel11.setFont(new java.awt.Font("Verdana", 2, 14)); // NOI18N
        jLabel11.setText("A tree is a non-linear data structure consisting of nodes connected by edges.");

        jLabel15.setFont(new java.awt.Font("Verdana", 2, 14)); // NOI18N
        jLabel15.setText("The nodes are organized in a hierarchical manner, with a single node at the top");

        jLabel16.setFont(new java.awt.Font("Verdana", 2, 14)); // NOI18N
        jLabel16.setText("called the root, and all other nodes connected to it by one or more edges. Each node");

        jLabel17.setFont(new java.awt.Font("Verdana", 2, 14)); // NOI18N
        jLabel17.setText("can have zero or more child nodes, and a node with no children is called a leaf node.");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(28, 28, 28))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-7, 463, 930, 230));

        jPanel3.setBackground(new java.awt.Color(10, 25, 49));

        operationsOnTree.setBackground(new java.awt.Color(255, 255, 255));
        operationsOnTree.setFont(new java.awt.Font("Nirmala UI", 1, 30)); // NOI18N
        operationsOnTree.setForeground(new java.awt.Color(255, 255, 255));
        operationsOnTree.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        operationsOnTree.setText("Operations on Tree");

        jPanel5.setBackground(new java.awt.Color(10, 25, 49));
        jPanel5.setLayout(new java.awt.GridLayout(5, 1, 5, 35));

        traversePre.setBackground(new java.awt.Color(102, 204, 255));
        traversePre.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        traversePre.setText("Pre-Order Traversal");
        traversePre.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        traversePre.setPreferredSize(new java.awt.Dimension(87, 12));
        traversePre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                traversePreMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                traversePreMouseExited(evt);
            }
        });
        traversePre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                traversePreActionPerformed(evt);
            }
        });
        jPanel5.add(traversePre);

        traverseIn.setBackground(new java.awt.Color(102, 204, 255));
        traverseIn.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        traverseIn.setText("In-Order Traversal");
        traverseIn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        traverseIn.setPreferredSize(new java.awt.Dimension(87, 12));
        traverseIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                traverseInMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                traverseInMouseExited(evt);
            }
        });
        traverseIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                traverseInActionPerformed(evt);
            }
        });
        jPanel5.add(traverseIn);

        traversePost.setBackground(new java.awt.Color(102, 204, 255));
        traversePost.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        traversePost.setText("Post-Order Traversal");
        traversePost.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        traversePost.setPreferredSize(new java.awt.Dimension(87, 12));
        traversePost.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                traversePostMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                traversePostMouseExited(evt);
            }
        });
        traversePost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                traversePostActionPerformed(evt);
            }
        });
        jPanel5.add(traversePost);

        insert.setBackground(new java.awt.Color(102, 204, 255));
        insert.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        insert.setText("Insert");
        insert.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        insert.setPreferredSize(new java.awt.Dimension(87, 12));
        insert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                insertMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                insertMouseExited(evt);
            }
        });
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });
        jPanel5.add(insert);

        search.setBackground(new java.awt.Color(102, 204, 255));
        search.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        search.setText("Search");
        search.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        search.setPreferredSize(new java.awt.Dimension(87, 12));
        search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchMouseExited(evt);
            }
        });
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        jPanel5.add(search);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ezgif.com-resize (8).gif"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(31, 31, 31)
                .addComponent(operationsOnTree)
                .addGap(66, 66, 66))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(operationsOnTree)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-6, -3, 490, 460));

        jTabbedPane1.setBackground(new java.awt.Color(10, 25, 49));

        tabTraverse.setBackground(new java.awt.Color(10, 25, 49));

        labelOutputTraverse.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelOutputTraverse.setForeground(new java.awt.Color(255, 255, 255));
        labelOutputTraverse.setText("Output:");

        textAreaTreeTraverse.setEditable(false);
        textAreaTreeTraverse.setColumns(20);
        textAreaTreeTraverse.setRows(5);
        jScrollPane1.setViewportView(textAreaTreeTraverse);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ezgif.com-resize (11).gif"))); // NOI18N

        javax.swing.GroupLayout tabTraverseLayout = new javax.swing.GroupLayout(tabTraverse);
        tabTraverse.setLayout(tabTraverseLayout);
        tabTraverseLayout.setHorizontalGroup(
            tabTraverseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabTraverseLayout.createSequentialGroup()
                .addGroup(tabTraverseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabTraverseLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel1))
                    .addGroup(tabTraverseLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(tabTraverseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelOutputTraverse, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        tabTraverseLayout.setVerticalGroup(
            tabTraverseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabTraverseLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelOutputTraverse, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );

        jTabbedPane1.addTab("tab1", tabTraverse);

        tabSearch.setBackground(new java.awt.Color(10, 25, 49));

        enterButtonTreeSearch.setBackground(new java.awt.Color(102, 204, 255));
        enterButtonTreeSearch.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        enterButtonTreeSearch.setText("Enter");
        enterButtonTreeSearch.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        enterButtonTreeSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                enterButtonTreeSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                enterButtonTreeSearchMouseExited(evt);
            }
        });
        enterButtonTreeSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonTreeSearchActionPerformed(evt);
            }
        });

        labelDataTreeSearch.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelDataTreeSearch.setForeground(new java.awt.Color(255, 255, 255));
        labelDataTreeSearch.setText("Enter the data:");

        javax.swing.GroupLayout tabSearchLayout = new javax.swing.GroupLayout(tabSearch);
        tabSearch.setLayout(tabSearchLayout);
        tabSearchLayout.setHorizontalGroup(
            tabSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabSearchLayout.createSequentialGroup()
                .addGroup(tabSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabSearchLayout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addGroup(tabSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelDataTreeSearch)
                            .addComponent(spinnerDataTreeSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabSearchLayout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(enterButtonTreeSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(140, Short.MAX_VALUE))
        );
        tabSearchLayout.setVerticalGroup(
            tabSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabSearchLayout.createSequentialGroup()
                .addContainerGap(173, Short.MAX_VALUE)
                .addComponent(labelDataTreeSearch)
                .addGap(18, 18, 18)
                .addComponent(spinnerDataTreeSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(enterButtonTreeSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(156, 156, 156))
        );

        jTabbedPane1.addTab("tab2", tabSearch);

        tabInsert.setBackground(new java.awt.Color(10, 25, 49));

        labelDataTreeInsert.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelDataTreeInsert.setForeground(new java.awt.Color(255, 255, 255));
        labelDataTreeInsert.setText("Enter the data:");

        enterButtonTreeInsert.setBackground(new java.awt.Color(102, 204, 255));
        enterButtonTreeInsert.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        enterButtonTreeInsert.setText("Enter");
        enterButtonTreeInsert.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        enterButtonTreeInsert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                enterButtonTreeInsertMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                enterButtonTreeInsertMouseExited(evt);
            }
        });
        enterButtonTreeInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonTreeInsertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabInsertLayout = new javax.swing.GroupLayout(tabInsert);
        tabInsert.setLayout(tabInsertLayout);
        tabInsertLayout.setHorizontalGroup(
            tabInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabInsertLayout.createSequentialGroup()
                .addGroup(tabInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabInsertLayout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addGroup(tabInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spinnerDataTreeInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelDataTreeInsert)))
                    .addGroup(tabInsertLayout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(enterButtonTreeInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(138, Short.MAX_VALUE))
        );
        tabInsertLayout.setVerticalGroup(
            tabInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabInsertLayout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addComponent(labelDataTreeInsert)
                .addGap(27, 27, 27)
                .addComponent(spinnerDataTreeInsert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(enterButtonTreeInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(118, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab5", tabInsert);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, -33, 430, 490));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 915, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        textAreaTreeTraverse.setText("");
        jTabbedPane1.setSelectedIndex(1);
        javax.swing.JOptionPane.showMessageDialog(pageTree.this,"Please provide the data to be searched.");
    }//GEN-LAST:event_searchActionPerformed

    private void traverseInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_traverseInActionPerformed
        textAreaTreeTraverse.setText("");
        jTabbedPane1.setSelectedIndex(0);
        
        StringBuilder result = new StringBuilder();
        bst.inOrderTraversal(bst.root, result);
        textAreaTreeTraverse.setText("Tree elements in in-order traverse operation:\n\n" + result.toString());
        
        javax.swing.JOptionPane.showMessageDialog(pageTree.this,"In-Order Traversal Complete!");
    }//GEN-LAST:event_traverseInActionPerformed

    private void traversePostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_traversePostActionPerformed
        textAreaTreeTraverse.setText("");
        jTabbedPane1.setSelectedIndex(0);
        
        StringBuilder result = new StringBuilder();
        bst.postOrderTraversal(bst.root, result);
        textAreaTreeTraverse.setText("Tree elements in post-order traverse operation:\n\n" + result.toString());    
        
        javax.swing.JOptionPane.showMessageDialog(pageTree.this,"Post-Order Traversal Complete!");
    }//GEN-LAST:event_traversePostActionPerformed

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        textAreaTreeTraverse.setText("");
        jTabbedPane1.setSelectedIndex(2);
        javax.swing.JOptionPane.showMessageDialog(pageTree.this,"Please provide the data to be inserted.");
    }//GEN-LAST:event_insertActionPerformed

    private void traversePreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_traversePreActionPerformed
        textAreaTreeTraverse.setText("");
        jTabbedPane1.setSelectedIndex(0);

        StringBuilder result = new StringBuilder();
        bst.preOrderTraversal(bst.root, result);
        textAreaTreeTraverse.setText("Tree elements in pre-order traverse operation:\n\n" + result.toString());
            
        javax.swing.JOptionPane.showMessageDialog(pageTree.this,"Pre-Order Traversal Complete!");

    }//GEN-LAST:event_traversePreActionPerformed

    private void enterButtonTreeSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonTreeSearchActionPerformed
        int data = (int) spinnerDataTreeSearch.getValue();
        boolean found = bst.search(bst.root, data);
        if (null == bst.root) {
        javax.swing.JOptionPane.showMessageDialog(null, "The tree is empty.");
        } else if (found) {
        javax.swing.JOptionPane.showMessageDialog(null, "The value " + data + " is found in the tree.");
        } else {
        javax.swing.JOptionPane.showMessageDialog(null, "The value " + data + " is not found in the tree.");
        }
        
    }//GEN-LAST:event_enterButtonTreeSearchActionPerformed

    private void menuTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuTreeActionPerformed
        close();
        page3_mainMenu pg3 = new page3_mainMenu();
        pg3.setVisible(true);       // TODO add your handling code here  // TODO add your handling code here:
    }//GEN-LAST:event_menuTreeActionPerformed

    private void changeTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeTreeActionPerformed
        close();
        page2 pg2 = new page2();
        pg2.setVisible(true);
    }//GEN-LAST:event_changeTreeActionPerformed

    private void exitTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitTreeActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitTreeActionPerformed

    private void enterButtonTreeInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonTreeInsertActionPerformed
    
    int data = (int) spinnerDataTreeInsert.getValue();
    bst.insert(data);
    DataStore.getInstance().addData(data); // add the new data to the data store
    javax.swing.JOptionPane.showMessageDialog(this, "Data inserted successfully!");
    }//GEN-LAST:event_enterButtonTreeInsertActionPerformed

    private void changeTreeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeTreeMouseEntered
    changeTree.setForeground(new Color(0, 0, 0));
    changeTree.setBackground(new Color(10,82,96));
    }//GEN-LAST:event_changeTreeMouseEntered

    private void changeTreeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeTreeMouseExited
    changeTree.setForeground(new Color(255, 255, 255));
    changeTree.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_changeTreeMouseExited

    private void menuTreeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTreeMouseEntered
    menuTree.setForeground(new Color(0, 0, 0));
    menuTree.setBackground(new Color(10,82,96));
    }//GEN-LAST:event_menuTreeMouseEntered

    private void menuTreeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTreeMouseExited
    menuTree.setForeground(new Color(255, 255, 255));
    menuTree.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_menuTreeMouseExited

    private void exitTreeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTreeMouseEntered
    exitTree.setForeground(new Color(0, 0, 0));
    exitTree.setBackground(new Color(10,82,96));
    }//GEN-LAST:event_exitTreeMouseEntered

    private void exitTreeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTreeMouseExited
    exitTree.setForeground(new Color(255, 255, 255));
    exitTree.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_exitTreeMouseExited

    private void traversePreMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_traversePreMouseEntered
    traversePre.setForeground(new Color(255, 255, 255));
    traversePre.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_traversePreMouseEntered

    private void traversePreMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_traversePreMouseExited
    traversePre.setForeground(new Color(0, 0, 0));
    traversePre.setBackground(new Color(102,204,255));
    }//GEN-LAST:event_traversePreMouseExited

    private void traverseInMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_traverseInMouseEntered
    traverseIn.setForeground(new Color(255, 255, 255));
    traverseIn.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_traverseInMouseEntered

    private void traverseInMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_traverseInMouseExited
    traverseIn.setForeground(new Color(0, 0, 0));
    traverseIn.setBackground(new Color(102,204,255));
    }//GEN-LAST:event_traverseInMouseExited

    private void traversePostMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_traversePostMouseEntered
    traversePost.setForeground(new Color(255, 255, 255));
    traversePost.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_traversePostMouseEntered

    private void traversePostMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_traversePostMouseExited
    traversePost.setForeground(new Color(0, 0, 0));
    traversePost.setBackground(new Color(102,204,255));
    }//GEN-LAST:event_traversePostMouseExited

    private void insertMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertMouseEntered
    insert.setForeground(new Color(255, 255, 255));
    insert.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_insertMouseEntered

    private void insertMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertMouseExited
    insert.setForeground(new Color(0, 0, 0));
    insert.setBackground(new Color(102,204,255));
    }//GEN-LAST:event_insertMouseExited

    private void searchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseEntered
    search.setForeground(new Color(255, 255, 255));
    search.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_searchMouseEntered

    private void searchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseExited
    search.setForeground(new Color(0, 0, 0));
    search.setBackground(new Color(102,204,255));
    }//GEN-LAST:event_searchMouseExited

    private void enterButtonTreeSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterButtonTreeSearchMouseEntered
    enterButtonTreeSearch.setForeground(new Color(255, 255, 255));
    enterButtonTreeSearch.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_enterButtonTreeSearchMouseEntered

    private void enterButtonTreeSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterButtonTreeSearchMouseExited
    enterButtonTreeSearch.setForeground(new Color(0, 0, 0));
    enterButtonTreeSearch.setBackground(new Color(102,204,255));
    }//GEN-LAST:event_enterButtonTreeSearchMouseExited

    private void enterButtonTreeInsertMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterButtonTreeInsertMouseEntered
    enterButtonTreeInsert.setForeground(new Color(255, 255, 255));
    enterButtonTreeInsert.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_enterButtonTreeInsertMouseEntered

    private void enterButtonTreeInsertMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterButtonTreeInsertMouseExited
    enterButtonTreeInsert.setForeground(new Color(0, 0, 0));
    enterButtonTreeInsert.setBackground(new Color(102,204,255));
    }//GEN-LAST:event_enterButtonTreeInsertMouseExited

 
    public void close(){
       WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
       Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pageTree.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pageTree.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pageTree.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pageTree.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pageTree().setVisible(true);
                            
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton changeTree;
    private javax.swing.JButton enterButtonTreeInsert;
    private javax.swing.JButton enterButtonTreeSearch;
    private javax.swing.JButton exitTree;
    private javax.swing.JButton insert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelDataTreeInsert;
    private javax.swing.JLabel labelDataTreeSearch;
    private javax.swing.JLabel labelOutputTraverse;
    private javax.swing.JButton menuTree;
    private javax.swing.JLabel operationsOnTree;
    private javax.swing.JButton search;
    private javax.swing.JSpinner spinnerDataTreeInsert;
    private javax.swing.JSpinner spinnerDataTreeSearch;
    private javax.swing.JPanel tabInsert;
    private javax.swing.JPanel tabSearch;
    private javax.swing.JPanel tabTraverse;
    private javax.swing.JTextArea textAreaTreeTraverse;
    private javax.swing.JButton traverseIn;
    private javax.swing.JButton traversePost;
    private javax.swing.JButton traversePre;
    // End of variables declaration//GEN-END:variables
}
