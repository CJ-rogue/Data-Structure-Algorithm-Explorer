/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package menu.driven.program.of.data.structures;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;

/**
 *
 * @author Christian Jhames
 */
public class pageLinkedList extends javax.swing.JFrame {
    
    static class Node{
        int value;
        Node next;
        
        Node(int value) {
            this.value = value;
            this.next = null;
        }
    }
    
    static Node head;
    static Node one = new Node(0);
    static Node two = new Node(0);
    static Node three = new Node(0);
    static Node four = new Node(0);
    static Node five = new Node(0);

    
    public pageLinkedList() {
        initComponents();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        changeLinkedList = new javax.swing.JButton();
        menuLinkedList = new javax.swing.JButton();
        exitLinkedList = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        operationsOnLinkedList = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        traverse = new javax.swing.JButton();
        insertion = new javax.swing.JButton();
        deletion = new javax.swing.JButton();
        search = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        tabTraverse = new javax.swing.JPanel();
        labelOutputTraverse = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaLinkedListTraverse = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        tabInsertion = new javax.swing.JPanel();
        labelOutputInsertion = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        textAreaLinkedListInsertion = new javax.swing.JTextArea();
        labelDataInsertion = new javax.swing.JLabel();
        spinnerDataInsertion = new javax.swing.JSpinner();
        labelPosInsertion = new javax.swing.JLabel();
        enterButtonLinkedListInsertion = new javax.swing.JButton();
        spinnerPosInsertion = new javax.swing.JComboBox<>();
        tabDeletion = new javax.swing.JPanel();
        labelOutputDeletion = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        textAreaLinkedListDeletion = new javax.swing.JTextArea();
        labelPosDeletion = new javax.swing.JLabel();
        enterButtonLinkedListDeletion = new javax.swing.JButton();
        spinnerPosDeletion = new javax.swing.JComboBox<>();
        tabSearch = new javax.swing.JPanel();
        labelOutputSearch = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaLinkedListSearch = new javax.swing.JTextArea();
        enterButtonLinkedListSearch = new javax.swing.JButton();
        labelDataSearch = new javax.swing.JLabel();
        spinnerDataSearch = new javax.swing.JSpinner();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(135, 206, 250));

        jPanel4.setBackground(new java.awt.Color(135, 206, 250));
        jPanel4.setLayout(new java.awt.GridLayout(3, 1, 5, 15));

        changeLinkedList.setBackground(new java.awt.Color(10, 25, 49));
        changeLinkedList.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        changeLinkedList.setForeground(new java.awt.Color(255, 255, 255));
        changeLinkedList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/change.png"))); // NOI18N
        changeLinkedList.setText("Change");
        changeLinkedList.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        changeLinkedList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                changeLinkedListMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                changeLinkedListMouseExited(evt);
            }
        });
        changeLinkedList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeLinkedListActionPerformed(evt);
            }
        });
        jPanel4.add(changeLinkedList);

        menuLinkedList.setBackground(new java.awt.Color(10, 25, 49));
        menuLinkedList.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        menuLinkedList.setForeground(new java.awt.Color(255, 255, 255));
        menuLinkedList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/menu.png"))); // NOI18N
        menuLinkedList.setText("Menu");
        menuLinkedList.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        menuLinkedList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuLinkedListMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuLinkedListMouseExited(evt);
            }
        });
        menuLinkedList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLinkedListActionPerformed(evt);
            }
        });
        jPanel4.add(menuLinkedList);

        exitLinkedList.setBackground(new java.awt.Color(10, 25, 49));
        exitLinkedList.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        exitLinkedList.setForeground(new java.awt.Color(255, 255, 255));
        exitLinkedList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exit.png"))); // NOI18N
        exitLinkedList.setText("Exit");
        exitLinkedList.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        exitLinkedList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitLinkedListMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitLinkedListMouseExited(evt);
            }
        });
        exitLinkedList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitLinkedListActionPerformed(evt);
            }
        });
        jPanel4.add(exitLinkedList);

        jPanel6.setBackground(new java.awt.Color(135, 206, 250));
        jPanel6.setLayout(new java.awt.GridLayout(2, 2, 55, 0));

        jLabel10.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/5700800.png"))); // NOI18N
        jLabel10.setText(" 2023 Christian Jhames De Los Reyes. All rights reserved.");
        jPanel6.add(jLabel10);

        jLabel13.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/size5.png"))); // NOI18N
        jLabel13.setText("Colveta 2, Mambaling, Cebu City, Cebu, 6000, Philippines");
        jPanel6.add(jLabel13);

        jLabel12.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/size2.png"))); // NOI18N
        jLabel12.setText(" christianjhamesdelosreyes@gmail.com");
        jPanel6.add(jLabel12);

        jLabel14.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/size3.png"))); // NOI18N
        jLabel14.setText(" 0915-044-0670");
        jPanel6.add(jLabel14);

        jLabel9.setFont(new java.awt.Font("Verdana", 2, 14)); // NOI18N
        jLabel9.setText("object and connected to the next element through a pointer. Unlike arrays, linked lists");

        jLabel11.setFont(new java.awt.Font("Verdana", 2, 14)); // NOI18N
        jLabel11.setText("A linked list is a linear data structure in which each element (node) is stored in a separate");

        jLabel15.setFont(new java.awt.Font("Verdana", 2, 14)); // NOI18N
        jLabel15.setText("do not have a fixed size, and elements can be easily added or removed during runtime.");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)
                        .addGap(43, 43, 43)))
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(28, 28, 28))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-7, 463, 930, 230));

        jPanel3.setBackground(new java.awt.Color(10, 25, 49));

        operationsOnLinkedList.setBackground(new java.awt.Color(255, 255, 255));
        operationsOnLinkedList.setFont(new java.awt.Font("Nirmala UI", 1, 30)); // NOI18N
        operationsOnLinkedList.setForeground(new java.awt.Color(255, 255, 255));
        operationsOnLinkedList.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        operationsOnLinkedList.setText("Operations on Linked List");

        jPanel5.setBackground(new java.awt.Color(10, 25, 49));
        jPanel5.setLayout(new java.awt.GridLayout(4, 1, 5, 35));

        traverse.setBackground(new java.awt.Color(102, 204, 255));
        traverse.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        traverse.setText("Traverse");
        traverse.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        traverse.setPreferredSize(new java.awt.Dimension(87, 12));
        traverse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                traverseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                traverseMouseExited(evt);
            }
        });
        traverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                traverseActionPerformed(evt);
            }
        });
        jPanel5.add(traverse);

        insertion.setBackground(new java.awt.Color(102, 204, 255));
        insertion.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        insertion.setText("Insert");
        insertion.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        insertion.setPreferredSize(new java.awt.Dimension(87, 12));
        insertion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                insertionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                insertionMouseExited(evt);
            }
        });
        insertion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertionActionPerformed(evt);
            }
        });
        jPanel5.add(insertion);

        deletion.setBackground(new java.awt.Color(102, 204, 255));
        deletion.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        deletion.setText("Delete");
        deletion.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deletion.setPreferredSize(new java.awt.Dimension(87, 12));
        deletion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deletionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deletionMouseExited(evt);
            }
        });
        deletion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletionActionPerformed(evt);
            }
        });
        jPanel5.add(deletion);

        search.setBackground(new java.awt.Color(102, 204, 255));
        search.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        search.setText("Search");
        search.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        search.setPreferredSize(new java.awt.Dimension(87, 12));
        search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchMouseExited(evt);
            }
        });
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        jPanel5.add(search);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ezgif.com-resize (8).gif"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(operationsOnLinkedList))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(operationsOnLinkedList))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel1)))
                .addGap(32, 32, 32)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-6, -3, 490, 460));

        jTabbedPane1.setBackground(new java.awt.Color(10, 25, 49));

        tabTraverse.setBackground(new java.awt.Color(10, 25, 49));

        labelOutputTraverse.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelOutputTraverse.setForeground(new java.awt.Color(255, 255, 255));
        labelOutputTraverse.setText("Output:");

        textAreaLinkedListTraverse.setEditable(false);
        textAreaLinkedListTraverse.setColumns(20);
        textAreaLinkedListTraverse.setRows(5);
        jScrollPane1.setViewportView(textAreaLinkedListTraverse);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ezgif.com-resize (12).gif"))); // NOI18N

        javax.swing.GroupLayout tabTraverseLayout = new javax.swing.GroupLayout(tabTraverse);
        tabTraverse.setLayout(tabTraverseLayout);
        tabTraverseLayout.setHorizontalGroup(
            tabTraverseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabTraverseLayout.createSequentialGroup()
                .addGroup(tabTraverseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabTraverseLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(tabTraverseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelOutputTraverse)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabTraverseLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel2)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        tabTraverseLayout.setVerticalGroup(
            tabTraverseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabTraverseLayout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelOutputTraverse)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jTabbedPane1.addTab("tab1", tabTraverse);

        tabInsertion.setBackground(new java.awt.Color(10, 25, 49));

        labelOutputInsertion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelOutputInsertion.setForeground(new java.awt.Color(255, 255, 255));
        labelOutputInsertion.setText("Output:");

        textAreaLinkedListInsertion.setEditable(false);
        textAreaLinkedListInsertion.setColumns(20);
        textAreaLinkedListInsertion.setRows(5);
        jScrollPane4.setViewportView(textAreaLinkedListInsertion);

        labelDataInsertion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelDataInsertion.setForeground(new java.awt.Color(255, 255, 255));
        labelDataInsertion.setText("Enter the data:");

        labelPosInsertion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelPosInsertion.setForeground(new java.awt.Color(255, 255, 255));
        labelPosInsertion.setText("Enter the position:");

        enterButtonLinkedListInsertion.setBackground(new java.awt.Color(102, 204, 255));
        enterButtonLinkedListInsertion.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        enterButtonLinkedListInsertion.setText("Enter");
        enterButtonLinkedListInsertion.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        enterButtonLinkedListInsertion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                enterButtonLinkedListInsertionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                enterButtonLinkedListInsertionMouseExited(evt);
            }
        });
        enterButtonLinkedListInsertion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonLinkedListInsertionActionPerformed(evt);
            }
        });

        spinnerPosInsertion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        spinnerPosInsertion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Head", "Middle", "Tail" }));

        javax.swing.GroupLayout tabInsertionLayout = new javax.swing.GroupLayout(tabInsertion);
        tabInsertion.setLayout(tabInsertionLayout);
        tabInsertionLayout.setHorizontalGroup(
            tabInsertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabInsertionLayout.createSequentialGroup()
                .addGroup(tabInsertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabInsertionLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(tabInsertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelOutputInsertion)
                            .addGroup(tabInsertionLayout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(tabInsertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelDataInsertion)
                                    .addComponent(spinnerDataInsertion, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(tabInsertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelPosInsertion)
                                    .addComponent(spinnerPosInsertion, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35))))
                    .addGroup(tabInsertionLayout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(enterButtonLinkedListInsertion, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        tabInsertionLayout.setVerticalGroup(
            tabInsertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabInsertionLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(labelOutputInsertion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(tabInsertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPosInsertion)
                    .addComponent(labelDataInsertion))
                .addGap(18, 18, 18)
                .addGroup(tabInsertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerDataInsertion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerPosInsertion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(enterButtonLinkedListInsertion, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        jTabbedPane1.addTab("tab4", tabInsertion);

        tabDeletion.setBackground(new java.awt.Color(10, 25, 49));

        labelOutputDeletion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelOutputDeletion.setForeground(new java.awt.Color(255, 255, 255));
        labelOutputDeletion.setText("Output:");

        textAreaLinkedListDeletion.setEditable(false);
        textAreaLinkedListDeletion.setColumns(20);
        textAreaLinkedListDeletion.setRows(5);
        jScrollPane3.setViewportView(textAreaLinkedListDeletion);

        labelPosDeletion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelPosDeletion.setForeground(new java.awt.Color(255, 255, 255));
        labelPosDeletion.setText("Enter the position:");

        enterButtonLinkedListDeletion.setBackground(new java.awt.Color(102, 204, 255));
        enterButtonLinkedListDeletion.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        enterButtonLinkedListDeletion.setText("Enter");
        enterButtonLinkedListDeletion.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        enterButtonLinkedListDeletion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                enterButtonLinkedListDeletionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                enterButtonLinkedListDeletionMouseExited(evt);
            }
        });
        enterButtonLinkedListDeletion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonLinkedListDeletionActionPerformed(evt);
            }
        });

        spinnerPosDeletion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        spinnerPosDeletion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Head", "Middle", "Tail" }));

        javax.swing.GroupLayout tabDeletionLayout = new javax.swing.GroupLayout(tabDeletion);
        tabDeletion.setLayout(tabDeletionLayout);
        tabDeletionLayout.setHorizontalGroup(
            tabDeletionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabDeletionLayout.createSequentialGroup()
                .addGroup(tabDeletionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabDeletionLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(tabDeletionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelOutputDeletion)))
                    .addGroup(tabDeletionLayout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addGroup(tabDeletionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enterButtonLinkedListDeletion, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabDeletionLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(tabDeletionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelPosDeletion)
                                    .addComponent(spinnerPosDeletion, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        tabDeletionLayout.setVerticalGroup(
            tabDeletionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabDeletionLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(labelOutputDeletion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(labelPosDeletion)
                .addGap(18, 18, 18)
                .addComponent(spinnerPosDeletion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(enterButtonLinkedListDeletion, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        jTabbedPane1.addTab("tab3", tabDeletion);

        tabSearch.setBackground(new java.awt.Color(10, 25, 49));

        labelOutputSearch.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelOutputSearch.setForeground(new java.awt.Color(255, 255, 255));
        labelOutputSearch.setText("Output:");

        textAreaLinkedListSearch.setEditable(false);
        textAreaLinkedListSearch.setColumns(20);
        textAreaLinkedListSearch.setRows(5);
        jScrollPane2.setViewportView(textAreaLinkedListSearch);

        enterButtonLinkedListSearch.setBackground(new java.awt.Color(102, 204, 255));
        enterButtonLinkedListSearch.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        enterButtonLinkedListSearch.setText("Enter");
        enterButtonLinkedListSearch.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        enterButtonLinkedListSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                enterButtonLinkedListSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                enterButtonLinkedListSearchMouseExited(evt);
            }
        });
        enterButtonLinkedListSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonLinkedListSearchActionPerformed(evt);
            }
        });

        labelDataSearch.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelDataSearch.setForeground(new java.awt.Color(255, 255, 255));
        labelDataSearch.setText("Enter the data:");

        javax.swing.GroupLayout tabSearchLayout = new javax.swing.GroupLayout(tabSearch);
        tabSearch.setLayout(tabSearchLayout);
        tabSearchLayout.setHorizontalGroup(
            tabSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabSearchLayout.createSequentialGroup()
                .addGroup(tabSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabSearchLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(tabSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelOutputSearch)
                            .addGroup(tabSearchLayout.createSequentialGroup()
                                .addGap(134, 134, 134)
                                .addGroup(tabSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelDataSearch)
                                    .addComponent(spinnerDataSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(tabSearchLayout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(enterButtonLinkedListSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        tabSearchLayout.setVerticalGroup(
            tabSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabSearchLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(labelOutputSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(labelDataSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spinnerDataSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(enterButtonLinkedListSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        jTabbedPane1.addTab("tab2", tabSearch);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, -33, 430, 490));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 915, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void insertionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertionActionPerformed
        textAreaLinkedListTraverse.setText("");
        textAreaLinkedListInsertion.setText("");
        textAreaLinkedListDeletion.setText("");
        textAreaLinkedListSearch.setText("");
        jTabbedPane1.setSelectedIndex(1);
        javax.swing.JOptionPane.showMessageDialog(pageLinkedList.this,"Please provide the data you would like to insert and its desired position.");
    }//GEN-LAST:event_insertionActionPerformed

    private void deletionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletionActionPerformed
        textAreaLinkedListTraverse.setText("");
        textAreaLinkedListInsertion.setText("");
        textAreaLinkedListDeletion.setText("");
        textAreaLinkedListSearch.setText("");
        jTabbedPane1.setSelectedIndex(2);
        javax.swing.JOptionPane.showMessageDialog(pageLinkedList.this,"Please provide the desired position to be deleted.");
    }//GEN-LAST:event_deletionActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        textAreaLinkedListTraverse.setText("");
        textAreaLinkedListInsertion.setText("");
        textAreaLinkedListDeletion.setText("");
        textAreaLinkedListSearch.setText("");
        jTabbedPane1.setSelectedIndex(3);
        javax.swing.JOptionPane.showMessageDialog(pageLinkedList.this,"Please provide the data to be searched.");
    }//GEN-LAST:event_searchActionPerformed

    public void initializeLinkedList() {
        DataStore dataStore = DataStore.getInstance();
        int[] data = dataStore.getData();
        Node head = null;
        Node tail = null;
        for (int i = 0; i < data.length; i++) {
            Node newNode = new Node(data[i]);
            if (head == null) {
                head = newNode;
                tail = newNode;
            } else {
                tail.next = newNode;
                tail = newNode;
            }
        }
        this.head = head;
    }
        
            public int length() {
                int length = 0;
                Node current = head;
                while (current != null) {
                    length++;
                    current = current.next;
                }
                return length;
            }
    
    private void traverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_traverseActionPerformed
        textAreaLinkedListTraverse.setText("");
        textAreaLinkedListInsertion.setText("");
        textAreaLinkedListDeletion.setText("");
        textAreaLinkedListSearch.setText("");
        jTabbedPane1.setSelectedIndex(0);
              
        initializeLinkedList();
        
         int linkedListLength = length();
        if (linkedListLength == 0) {
            javax.swing.JOptionPane.showMessageDialog(pageLinkedList.this, "Linked List is empty!");
            return;
        }

        textAreaLinkedListTraverse.append("Linked List elements in traverse operation:\n\n");
        Node current = head;
        
        while (current != null) {
            textAreaLinkedListTraverse.append(current.value + "  ");
            current = current.next;
        }

        javax.swing.JOptionPane.showMessageDialog(pageLinkedList.this, "Traverse Complete!");

    }//GEN-LAST:event_traverseActionPerformed

    private void enterButtonLinkedListSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonLinkedListSearchActionPerformed

            textAreaLinkedListSearch.setText("");

        initializeLinkedList();

        textAreaLinkedListSearch.append("Linked List elements:\n\n");
        Node current = head;

        while (current != null) {
            textAreaLinkedListSearch.append(current.value + "  ");
            current = current.next;
        }

        int data = (int) spinnerDataSearch.getValue();
        boolean isFound = false;
        current = head;

        while (current != null) {
            if (current.value == data) {
                isFound = true;
                break;
            }
            current = current.next;
        }

        if (isFound) {
            textAreaLinkedListSearch.append("\n\nElement " + data + " found in the Linked List!");
            javax.swing.JOptionPane.showMessageDialog(pageLinkedList.this, "Element found!"); 
        } else {
            textAreaLinkedListSearch.append("\n\nElement " + data + " not found in the Linked List.");
            javax.swing.JOptionPane.showMessageDialog(pageLinkedList.this, "Element not found!"); 
        }
       
    }//GEN-LAST:event_enterButtonLinkedListSearchActionPerformed

    private void menuLinkedListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLinkedListActionPerformed
        close();
        page3_mainMenu pg3 = new page3_mainMenu();
        pg3.setVisible(true);       // TODO add your handling code here  // TODO add your handling code here:
    }//GEN-LAST:event_menuLinkedListActionPerformed

    private void changeLinkedListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeLinkedListActionPerformed
        close();
        page2 pg2 = new page2();
        pg2.setVisible(true); 
    }//GEN-LAST:event_changeLinkedListActionPerformed

    private void exitLinkedListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitLinkedListActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitLinkedListActionPerformed

    private void enterButtonLinkedListDeletionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonLinkedListDeletionActionPerformed
             textAreaLinkedListDeletion.setText("");

    initializeLinkedList();

    textAreaLinkedListDeletion.append("Linked List elements before deletion:\n\n");
    Node current = head;

    while (current != null) {
        textAreaLinkedListDeletion.append(current.value + "  ");
        current = current.next;
    }

    String pos = (String) spinnerPosDeletion.getSelectedItem();

    if (pos.equals("Head")) {
        head = head.next;
    } else if (pos.equals("Middle")) {
        Node prev = null;
        current = head;
        int count = 0;
        while (count < length() / 2) {
            prev = current;
            current = current.next;
            count++;
        }
        prev.next = current.next;
    } else if (pos.equals("Tail")) {
        Node prev = null;
        current = head;
        while (current.next != null) {
            prev = current;
            current = current.next;
        }
        prev.next = null;
    }

    textAreaLinkedListDeletion.append("\n\nLinked List elements after deletion:\n\n");
    current = head;

    while (current != null) {
        textAreaLinkedListDeletion.append(current.value + "  ");
        current = current.next;
    }
        int linkedListLength = length();
        int[] newData = new int[linkedListLength];
        current = head;
        int i = 0;
        while (current != null) {
        newData[i] = current.value;
        current = current.next;
        i++;
    }
    DataStore.getInstance().setData(newData);

    javax.swing.JOptionPane.showMessageDialog(pageLinkedList.this, "Deletion Complete!"); 
    }//GEN-LAST:event_enterButtonLinkedListDeletionActionPerformed

    private void enterButtonLinkedListInsertionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonLinkedListInsertionActionPerformed
            textAreaLinkedListInsertion.setText("");

            initializeLinkedList();

    textAreaLinkedListInsertion.append("Linked List elements before insertion:\n\n");
    Node current = head;

    while (current != null) {
        textAreaLinkedListInsertion.append(current.value + "  ");
        current = current.next;
    }

    int data = (int) spinnerDataInsertion.getValue();
    String pos = (String) spinnerPosInsertion.getSelectedItem();

    if (pos.equals("Head")) {
    Node newNode = new Node(data);
    newNode.next = head;
    head = newNode;
} else if (pos.equals("Middle")) {
    Node newNode = new Node(data);
    Node prev = null;
    current = head;
    int count = 0;
    while (count < length() / 2) {
        prev = current;
        current = current.next;
        count++;
    }
    newNode.next = current;
    prev.next = newNode;
} else if (pos.equals("Tail")) {
    Node newNode = new Node(data);
    current = head;
    while (current.next != null) {
        current = current.next;
    }
    current.next = newNode;
}

    textAreaLinkedListInsertion.append("\n\nLinked List elements after insertion:\n\n");
    current = head;
    
    while (current != null) {
        textAreaLinkedListInsertion.append(current.value + "  ");
        current = current.next;
    }
        int linkedListLength = length();
        int[] newData = new int[linkedListLength];
        current = head;
        int i = 0;
        while (current != null) {
        newData[i] = current.value;
        current = current.next;
        i++;
    }
    DataStore.getInstance().setData(newData);

    javax.swing.JOptionPane.showMessageDialog(pageLinkedList.this, "Insertion Complete!");      
    }//GEN-LAST:event_enterButtonLinkedListInsertionActionPerformed

    private void changeLinkedListMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeLinkedListMouseEntered
    changeLinkedList.setForeground(new Color(0, 0, 0));
    changeLinkedList.setBackground(new Color(10,82,96));
    }//GEN-LAST:event_changeLinkedListMouseEntered

    private void changeLinkedListMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeLinkedListMouseExited
    changeLinkedList.setForeground(new Color(255, 255, 255));
    changeLinkedList.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_changeLinkedListMouseExited

    private void menuLinkedListMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuLinkedListMouseEntered
    menuLinkedList.setForeground(new Color(0, 0, 0));
    menuLinkedList.setBackground(new Color(10,82,96));
    }//GEN-LAST:event_menuLinkedListMouseEntered

    private void menuLinkedListMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuLinkedListMouseExited
    menuLinkedList.setForeground(new Color(255, 255, 255));
    menuLinkedList.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_menuLinkedListMouseExited

    private void exitLinkedListMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLinkedListMouseEntered
    exitLinkedList.setForeground(new Color(0, 0, 0));
    exitLinkedList.setBackground(new Color(10,82,96));
    }//GEN-LAST:event_exitLinkedListMouseEntered

    private void exitLinkedListMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLinkedListMouseExited
    exitLinkedList.setForeground(new Color(255, 255, 255));
    exitLinkedList.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_exitLinkedListMouseExited

    private void traverseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_traverseMouseEntered
    traverse.setForeground(new Color(255, 255, 255));
    traverse.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_traverseMouseEntered

    private void traverseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_traverseMouseExited
    traverse.setForeground(new Color(0, 0, 0));
    traverse.setBackground(new Color(102,204,255));
    }//GEN-LAST:event_traverseMouseExited

    private void insertionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertionMouseEntered
    insertion.setForeground(new Color(255, 255, 255));
    insertion.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_insertionMouseEntered

    private void insertionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertionMouseExited
    insertion.setForeground(new Color(0, 0, 0));
    insertion.setBackground(new Color(102,204,255));
    }//GEN-LAST:event_insertionMouseExited

    private void deletionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletionMouseEntered
    deletion.setForeground(new Color(255, 255, 255));
    deletion.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_deletionMouseEntered

    private void deletionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletionMouseExited
    deletion.setForeground(new Color(0, 0, 0));
    deletion.setBackground(new Color(102,204,255));
    }//GEN-LAST:event_deletionMouseExited

    private void searchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseEntered
    search.setForeground(new Color(255, 255, 255));
    search.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_searchMouseEntered

    private void searchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseExited
    search.setForeground(new Color(0, 0, 0));
    search.setBackground(new Color(102,204,255));
    }//GEN-LAST:event_searchMouseExited

    private void enterButtonLinkedListInsertionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterButtonLinkedListInsertionMouseEntered
    enterButtonLinkedListInsertion.setForeground(new Color(255, 255, 255));
    enterButtonLinkedListInsertion.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_enterButtonLinkedListInsertionMouseEntered

    private void enterButtonLinkedListInsertionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterButtonLinkedListInsertionMouseExited
    enterButtonLinkedListInsertion.setForeground(new Color(0, 0, 0));
    enterButtonLinkedListInsertion.setBackground(new Color(102,204,255));
    }//GEN-LAST:event_enterButtonLinkedListInsertionMouseExited

    private void enterButtonLinkedListDeletionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterButtonLinkedListDeletionMouseEntered
    enterButtonLinkedListDeletion.setForeground(new Color(255, 255, 255));
    enterButtonLinkedListDeletion.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_enterButtonLinkedListDeletionMouseEntered

    private void enterButtonLinkedListDeletionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterButtonLinkedListDeletionMouseExited
    enterButtonLinkedListDeletion.setForeground(new Color(0, 0, 0));
    enterButtonLinkedListDeletion.setBackground(new Color(102,204,255));
    }//GEN-LAST:event_enterButtonLinkedListDeletionMouseExited

    private void enterButtonLinkedListSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterButtonLinkedListSearchMouseEntered
    enterButtonLinkedListSearch.setForeground(new Color(255, 255, 255));
    enterButtonLinkedListSearch.setBackground(new Color(10, 25, 49));
    }//GEN-LAST:event_enterButtonLinkedListSearchMouseEntered

    private void enterButtonLinkedListSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterButtonLinkedListSearchMouseExited
    enterButtonLinkedListSearch.setForeground(new Color(0, 0, 0));
    enterButtonLinkedListSearch.setBackground(new Color(102,204,255));
    }//GEN-LAST:event_enterButtonLinkedListSearchMouseExited

 
    public void close(){
       WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
       Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pageLinkedList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pageLinkedList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pageLinkedList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pageLinkedList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pageLinkedList().setVisible(true);
                
            }
        });
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton changeLinkedList;
    private javax.swing.JButton deletion;
    private javax.swing.JButton enterButtonLinkedListDeletion;
    private javax.swing.JButton enterButtonLinkedListInsertion;
    private javax.swing.JButton enterButtonLinkedListSearch;
    private javax.swing.JButton exitLinkedList;
    private javax.swing.JButton insertion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelDataInsertion;
    private javax.swing.JLabel labelDataSearch;
    private javax.swing.JLabel labelOutputDeletion;
    private javax.swing.JLabel labelOutputInsertion;
    private javax.swing.JLabel labelOutputSearch;
    private javax.swing.JLabel labelOutputTraverse;
    private javax.swing.JLabel labelPosDeletion;
    private javax.swing.JLabel labelPosInsertion;
    private javax.swing.JButton menuLinkedList;
    private javax.swing.JLabel operationsOnLinkedList;
    private javax.swing.JButton search;
    private javax.swing.JSpinner spinnerDataInsertion;
    private javax.swing.JSpinner spinnerDataSearch;
    private javax.swing.JComboBox<String> spinnerPosDeletion;
    private javax.swing.JComboBox<String> spinnerPosInsertion;
    private javax.swing.JPanel tabDeletion;
    private javax.swing.JPanel tabInsertion;
    private javax.swing.JPanel tabSearch;
    private javax.swing.JPanel tabTraverse;
    private javax.swing.JTextArea textAreaLinkedListDeletion;
    private javax.swing.JTextArea textAreaLinkedListInsertion;
    private javax.swing.JTextArea textAreaLinkedListSearch;
    private javax.swing.JTextArea textAreaLinkedListTraverse;
    private javax.swing.JButton traverse;
    // End of variables declaration//GEN-END:variables
}
